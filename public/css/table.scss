
$gray-light: #cccccc;
$gray: #f1f1f1;
$teal: #26a69a;
$black: #000000;
$white: #ffffff;
$dark-teal: #064f55;
$green: #3c763d;
$teal: #0596a7;
$lime: #78b943;
$yellow: #f7dd02;
$orange: #e28648;
$red: #c3002f;

body {
  font-family: Open Sans, San-Serif;
  font-size: 16px;
  color: #595959;
  margin: 20px;
}

h1 {
  font-size: 28px;
  font-weight: 300;
  margin-bottom: 15px;
}

th {
  font-weight: 700;
  text-align: left;
  border-bottom: solid 1px $gray-light;
  padding: 5px 0;
}

td {
  vertical-align: middle;
  height: 34px;
  padding: 10px;
  border-bottom: solid 1px $gray;
}

.background {
  font-weight: 700;
  vertical-align: middle;
  position: relative;
  color: $white;
  a {
    color: $white;
    font-weight: 400;
    text-decoration: none;
  }

  &__pass {
    background-color: $lime !important;
  }
  &__fail {
    background-color: $red !important;
  }

  &__reviewed {
    background-color: $orange !important;
  }
  &__running {
    padding: 0;
    /* Progress Bar */
    .progress {
      position: relative;
      height: 100%;
      display: block;
      width: 100%;
      background-color: lighten($teal, 5%);
      overflow: hidden;

      .indeterminate {
        background-color: $teal;

        &:before {
          content: "";
          position: absolute;
          background-color: inherit;
          top: 0;
          left: 0;
          bottom: 0;
          will-change: left, right;
          animation: indeterminate 3.1s cubic-bezier(0.65, 0.815, 0.735, 0.395)
            infinite;
        }
      }
    }

    a {
      display: block;
      position: absolute;
      height: 34px;
      top: 11px;
      width: 100%;
      // line-height: 1;
      left: 10px;
    }
  }
}

button {
  background: none;
  border: 0;
  box-sizing: border-box;
  // Using inset box-shadow instead of border for sizing simplicity
  box-shadow: inset 0 0 0 2px #064f55;
  color: $red;
  font-size: inherit;
  font-weight: 700;

  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

.draw {
  transition: color 0.25s;

&::before,
&::after {
  // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
  border: 2px solid transparent;
  width: 0;
  height: 0;
}

// This covers the top & right borders (expands right, then down)
&::before {
  top: 0;
  left: 0;
}

// And this the bottom & left borders (expands left, then up)
&::after {
  bottom: 0;
  right: 0;
}

&:hover {
  color: #b4a8f7;
}

// Hover styles
&:hover::before,
&:hover::after {
  width: 100%;
  height: 100%;
}

&:hover::before {
  border-top-color: #b4a8f7; // Make borders visible
  border-right-color: #b4a8f7;
  transition:
    width 0.25s ease-out, // Width expands first
    height 0.25s ease-out 0.25s; // And then height
}

&:hover::after {
  border-bottom-color: #b4a8f7; // Make borders visible
  border-left-color: #b4a8f7;
  transition:
    border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
    width 0.25s ease-out 0.5s, // And then exanding width
    height 0.25s ease-out 0.75s; // And finally height
}
}

@-webkit-keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%;
  }
  60% {
    left: 100%;
    right: -90%;
  }
  100% {
    left: 100%;
    right: -90%;
  }
}
@keyframes indeterminate {
  0% {
    left: -35%;
    right: 100%;
  }
  60% {
    left: 100%;
    right: -90%;
  }
  100% {
    left: 100%;
    right: -90%;
  }
}



@import url('https://fonts.googleapis.com/css?family=Permanent+Marker');
	
	svg {
		width: 100%;
		height: auto;
		fill: none;
		stroke: #000000;
		stroke-width: 8;
		
		tspan > tspan {
			stroke-dasharray: 1500;
			stroke-dashoffset: -1500;
			
			@for $i from 1 through 15 {
				
				&:nth-of-type(#{$i}) {
					animation: draw 300ms #{$i * 150}ms forwards;
				}
				
			}
			
		}
		
	}
@keyframes draw {
	
	100% {
		stroke-dashoffset: 0;
	}
	
}
  